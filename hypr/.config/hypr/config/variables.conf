# ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
# ┃                    Variables Configuration                  ┃
# ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

source = ~/.config/hypr/config/colors.conf
source = ~/.config/hypr/config/wallust-colors.conf

# Variables wiki https://wiki.hyprland.org/0.45.0/Configuring/Variables/ #
# https://wiki.hyprland.org/0.45.0/Configuring/Variables/#general
general {

    gaps_in = 4
    gaps_out = 8,16,16,16
    border_size = 2
    col.active_border = $color15
    col.inactive_border = $color0
    col.nogroup_border_active = $color15
    col.nogroup_border = $color0

    layout = dwindle # master|dwindle(|hy3)

    # https://wiki.hyprland.org/0.45.0/Configuring/Variables/#snap
    snap {
    	enabled = false
    }

}

plugin {
    plugin:dynamic-cursors {

        # enables the plugin
        enabled = true

        # sets the cursor behaviour, supports these values:
        # tilt    - tilt the cursor based on x-velocity
        # rotate  - rotate the cursor based on movement direction
        # stretch - stretch the cursor shape based on direction and velocity
        # none    - do not change the cursors behaviour
        mode = rotate

        # minimum angle difference in degrees after which the shape is changed
        # smaller values are smoother, but more expensive for hw cursors
        threshold = 1

        # override the mode behaviour per shape
        # this is a keyword and can be repeated many times
        # by default, there are no rules added
        # see the dedicated `shape rules` section below!
        #shaperule = <shape-name>, <mode> (optional), <property>: <value>, ...
        #shaperule = <shape-name>, <mode> (optional), <property>: <value>, ...

        # for mode = rotate
        rotate {

            # length in px of the simulated stick used to rotate the cursor
            # most realistic if this is your actual cursor size
            length = 32

            # clockwise offset applied to the angle in degrees
            # this will apply to ALL shapes
            offset = 0.0
        }

        # for mode = tilt
        tilt {

            # controls how powerful the tilt is, the lower, the more power
            # this value controls at which speed (px/s) the full tilt is reached
            limit = 5000

            # relationship between speed and tilt, supports these values:
            # linear             - a linear function is used
            # quadratic          - a quadratic function is used (most realistic to actual air drag)
            # negative_quadratic - negative version of the quadratic one, feels more aggressive
            function = quadratic
        }

        # for mode = stretch
        stretch {

            # controls how much the cursor is stretched
            # this value controls at which speed (px/s) the full stretch is reached
            limit = 3000

            # relationship between speed and stretch amount, supports these values:
            # linear             - a linear function is used
            # quadratic          - a quadratic function is used
            # negative_quadratic - negative version of the quadratic one, feels more aggressive
            function = quadratic
        }

        # configure shake to find
        # magnifies the cursor if its is being shaken
        shake {

            # enables shake to find
            enabled = true

            # use nearest-neighbour (pixelated) scaling when shaking
            # may look weird when effects are enabled
            nearest = true

            # controls how soon a shake is detected
            # lower values mean sooner
            threshold = 6.0

            # magnification level immediately after shake start
            base = 4.0
            # magnification increase per second when continuing to shake
            speed = 4.0
            # how much the speed is influenced by the current shake intensitiy
            influence = 0.0

            # maximal magnification the cursor can reach
            # values below 1 disable the limit (e.g. 0)
            limit = 0.0

            # time in millseconds the cursor will stay magnified after a shake has ended
            timeout = 2000

            # show cursor behaviour `tilt`, `rotate`, etc. while shaking
            effects = false

            # enable ipc events for shake
            # see the `ipc` section below
            ipc = false
        }

        # use hyprcursor to get a higher resolution texture when the cursor is magnified
        # see the `hyprcursor` section below
        hyprcursor {

            # use nearest-neighbour (pixelated) scaling when magnifing beyond texture size
            # this will also have effect without hyprcursor support being enabled
            # 0 / false - never use pixelated scaling
            # 1 / true  - use pixelated when no highres image
            # 2         - always use pixleated scaling
            nearest = true

            # enable dedicated hyprcursor support
            enabled = true

            # resolution in pixels to load the magnified shapes at
            # be warned that loading a very high-resolution image will take a long time and might impact memory consumption
            # -1 means we use [normal cursor size] * [shake:base option]
            resolution = -1

            # shape to use when clientside cursors are being magnified
            # see the shape-name property of shape rules for possible names
            # specifying clientside will use the actual shape, but will be pixelated
            fallback = clientside
        }
    }

    hy3 {
        # disable gaps when only one window is onscreen
        # 0 - always show gaps
        # 1 - hide gaps with a single window onscreen
        # 2 - 1 but also show the window border
        no_gaps_when_only = 0 # default: 0

        # policy controlling what happens when a node is removed from a group,
        # leaving only a group
        # 0 = remove the nested group
        # 1 = keep the nested group
        # 2 = keep the nested group only if its parent is a tab group
        node_collapse_policy = 2 # default: 2

        # offset from group split direction when only one window is in a group
        group_inset = 10 # default: 10

        # if a tab group will automatically be created for the first window spawned in a workspace
        tab_first_window = false

        # tab group settings
        tabs {
          # height of the tab bar
          height = 22 # default: 22

          # padding between the tab bar and its focused node
          padding = 6 # default: 6

          # the tab bar should animate in/out from the top instead of below the window
          from_top = false # default: false

          # radius of tab bar corners
          radius = 6 # default: 6

          # tab bar border width
          border_width = 2 # default: 2

          # render the window title on the bar
          render_text = true # default: true

          # center the window title
          text_center = true # default: true

          # font to render the window title with
          text_font = JetBrainsMono Nerd Font # default: Sans

          # height of the window title
          text_height = 8 # default: 8

          # left padding of the window title
          text_padding = 3 # default: 3

          # active tab bar segment colors
          col.active = rgba(33ccff40) # default: rgba(33ccff40)
          col.active.border = rgba(33ccffee) # default: rgba(33ccffee)
          col.active.text = rgba(ffffffff) # default: rgba(ffffffff)

          # focused tab bar segment colors (focused node in unfocused container)
          col.focused = rgba(60606040) # default: rgba(60606040)
          col.focused.border = rgba(808080ee) # default: rgba(808080ee)
          col.focused.text = rgba(ffffffff) # default: rgba(ffffffff)

          # inactive tab bar segment colors
          col.inactive = rgba(30303020) # default: rgba(30303020)
          col.inactive.border = rgba(606060aa) # default: rgba(606060aa)
          col.inactive.text = rgba(ffffffff) # default: rgba(ffffffff)

          # urgent tab bar segment colors
          col.urgent = rgba(ff223340) # default: rgba(ff223340)
          col.urgent.border = rgba(ff2233ee) # default: rgba(ff2233ee)
          col.urgent.text = rgba(ffffffff) # default: rgba(ffffffff)

          # urgent tab bar segment colors
          col.locked = rgba(90903340) # default: rgba(90903340)
          col.locked.border = rgba(909033ee) # default: rgba(909033ee)
          col.locked.text = rgba(ffffffff) # default: rgba(ffffffff)

          # if tab backgrounds should be blurred
          # Blur is only visible when the above colors are not opaque.
          blur = true # default: true

          # opacity multiplier for tabs
          # Applies to blur as well as the given colors.
          opacity = 1.0 # default: 1.0
        }

        # autotiling settings
        autotile {
          # enable autotile
          enable = false # default: false

          # make autotile-created groups ephemeral
          ephemeral_groups = true # default: true

          # if a window would be squished smaller than this width, a vertical split will be created
          # -1 = never automatically split vertically
          # 0 = always automatically split vertically
          # <number> = pixel width to split at
          trigger_width = 0 # default: 0

          # if a window would be squished smaller than this height, a horizontal split will be created
          # -1 = never automatically split horizontally
          # 0 = always automatically split horizontally
          # <number> = pixel height to split at
          trigger_height = 0 # default: 0

          # a space or comma separated list of workspace ids where autotile should be enabled
          # it's possible to create an exception rule by prefixing the definition with "not:"
          # workspaces = 1,2 # autotiling will only be enabled on workspaces 1 and 2
          # workspaces = not:1,2 # autotiling will be enabled on all workspaces except 1 and 2
          workspaces = all # default: all
        }
    }
}

# https://wiki.hyprland.org/0.45.0/Configuring/Variables/#gestures
gestures {
     workspace_swipe = false
     workspace_swipe_fingers = 4
     workspace_swipe_distance = 250
     workspace_swipe_min_speed_to_force = 15
     workspace_swipe_create_new = false
}

# https://wiki.hyprland.org/0.45.0/Configuring/Variables/#group
group {
	col.border_active = $color15
	col.border_inactive = $color0
	col.border_locked_active = $color15
	col.border_locked_inactive = $color0

    # https://wiki.hyprland.org/0.45.0/Configuring/Variables/#groupbar
	groupbar {
		font_family = "JetBrainsMono Nerd Font"
		text_color = $foreground
		col.active = $color15
		col.inactive = $color0
		col.locked_active = $color15
		col.locked_inactive = $color0
	}
}
# https://wiki.hyprland.org/0.45.0/Configuring/Variables/#misc
misc {
    font_family = "Fira Sans"
    splash_font_family = "Fira Sans"
    disable_hyprland_logo = true
    col.splash = $color15
    background_color = $color0
    enable_swallow = true
    swallow_regex = ^(cachy-browser|firefox|nautilus|nemo|thunar|btrfs-assistant.)$
    focus_on_activate = true
    vrr = 0
    vfr = true
}

# https://wiki.hyprland.org/0.45.0/Configuring/Variables/#render
render {
   direct_scanout = true
}

# See https://wiki.hyprland.org/0.45.0/Configuring/Dwindle-Layout/ for more
dwindle {
    special_scale_factor = 0.92
    pseudotile = true # master switch for pseudotiling. Enabling is bound to mainMod + P in the keybinds section below
    preserve_split = true
}

# See https://wiki.hyprland.org/0.45.0/Configuring/Master-Layout/ for more
master {
    new_status = master
    special_scale_factor = 0.92
}
